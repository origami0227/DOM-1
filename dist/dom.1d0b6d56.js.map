{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"../src","sourcesContent":["window.dom = {\n  create(string) {\n    const container = document.createElement(\"template\");\n    container.innerHTML = string.trim();\n    return container.content.firstChild;\n  }, //用于创建节点\n  after(node, node2) {\n    node.parentNode.insertBefore(node2, node.nextSibling);\n  }, //用于新增弟弟\n  before(node, node2) {\n    node.parentNode.insertBefore(node2, node);\n  }, //用于新增哥哥\n  append(parent, node) {\n    parent.appendChild(node);\n  }, //用于新增儿子\n  wrap(node, parent) {\n    dom.before(node, parent); //在该节点前创造一个新节点使其成为兄弟关系\n    dom.append(parent, node); //然后将该节点传入这个新节点，实现从原来地方移除并使其成为父子关系，\n  }, //用于新增爸爸\n  remove(node) {\n    node.parentNode.removeChild(node);\n    return node;\n  }, //用于删除节点\n  empty(node) {\n    const array = [];\n    let x = node.firstChild;\n    while (x) {\n      array.push(dom.remove(node.firstChild));\n      x = node.firstChild;\n    } //用于删除后代\n    return array;\n  },\n  attr(node, name, value) {\n    // 重载\n    if (arguments.length === 3) {\n      node.setAttribute(name, value);\n    } else if (arguments.length === 2) {\n      return node.getAttribute(name);\n    }\n  }, //用于读写属性\n  text(node, string) {\n    // 适配\n    if (arguments.length === 2) {\n      if (\"innerText\" in node) {\n        node.innerText = string;\n      } else {\n        node.textContent = string;\n      }\n    } else if (arguments.length === 1) {\n      if (\"innerText\" in node) {\n        return node.innerText;\n      } else {\n        return node.textContent;\n      }\n    }\n  }, //用于读写文本内容\n  html(node, string) {\n    if (arguments.length === 2) {\n      node.innerHTML = string;\n    } else if (arguments.length === 1) {\n      return node.innerHTML;\n    }\n  },\n  style(node, name, value) {\n    if (arguments.length === 3) {\n      // dom.style(div, 'color', 'red')\n      node.style[name] = value;\n    } else if (arguments.length === 2) {\n      if (typeof name === \"string\") {\n        // dom.style(div, 'color')\n        return node.style[name];\n      } else if (name instanceof Object) {\n        // dom.style(div, {color: 'red'})\n        const object = name;\n        for (let key in object) {\n          node.style[key] = object[key];\n        }\n      }\n    }\n  }, //用于修改style\n  class: {\n    add(node, className) {\n      node.classList.add(className);\n    },\n    remove(node, className) {\n      node.classList.remove(className);\n    },\n    has(node, className) {\n      return node.classList.contains(className);\n    },\n  }, //用于添加class\n  on(node, eventName, fn) {\n    node.addEventListener(eventName, fn);\n  }, //添加事件监听\n  off(node, eventName, fn) {\n    node.removeEventListener(eventName, fn);\n  }, //取消事件监听\n  find(selector, scope) {\n    return (scope || document).querySelectorAll(selector);\n  }, //用于获取标签\n  parent(node) {\n    return node.parentNode;\n  }, //用于获取夫元素\n  children(node) {\n    return node.children;\n  }, //用于获取子元素\n  siblings(node) {\n    return Array.from(node.parentNode.children).filter((n) => n !== node);\n  }, //用于获取兄弟元素\n  next(node) {\n    let x = node.nextSibling;\n    while (x && x.nodeType === 3) {\n      x = x.nextSibling;\n    }\n    return x;\n  }, //用于获取弟弟\n  previous(node) {\n    let x = node.previousSibling;\n    while (x && x.nodeType === 3) {\n      x = x.previousSibling;\n    }\n    return x;\n  }, //用于获取哥哥\n  each(nodeList, fn) {\n    for (let i = 0; i < nodeList.length; i++) {\n      fn.call(null, nodeList[i]);\n    }\n  }, //用于遍历所有节点\n  index(node) {\n    const list = dom.children(node.parentNode);\n    let i;\n    for (i = 0; i < list.length; i++) {\n      if (list[i] === node) {\n        break;\n      }\n    }\n    return i;\n  }, //用于获取排行第几\n};\n"]}